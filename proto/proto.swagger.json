{
  "swagger": "2.0",
  "info": {
    "title": "proto/auth/webauthn/webauthn.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "WebAuthNService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/webauthn/register/get_credential_creation_options": {
      "get": {
        "summary": "Create idp",
        "operationId": "WebAuthNService_GetCredentialCreateOptions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/idpGetCredentialCreateOptionsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "WebAuthNService"
        ]
      }
    }
  },
  "definitions": {
    "fidoAttestationConveyancePreference": {
      "type": "string",
      "enum": [
        "NONE_ATTESTATION_PREFERENCE",
        "INDIRECT",
        "DIRECT",
        "ENTERPRISE"
      ],
      "default": "NONE_ATTESTATION_PREFERENCE",
      "description": "- ENTERPRISE: A non-standard addition that we hope will become standard. This indicates\nthat the RP desires individual attestaion from the device.",
      "title": "See https://w3c.github.io/webauthn/#enumdef-attestationconveyancepreference"
    },
    "fidoAuthenticatorAttachment": {
      "type": "string",
      "enum": [
        "NO_PREFERENCE",
        "PLATFORM",
        "CROSS_PLATFORM"
      ],
      "default": "NO_PREFERENCE",
      "description": "https://w3c.github.io/webauthn/#enumdef-authenticatorattachment."
    },
    "fidoAuthenticatorSelectionCriteria": {
      "type": "object",
      "properties": {
        "authenticatorAttachment": {
          "$ref": "#/definitions/fidoAuthenticatorAttachment",
          "description": "Filter authenticators by attachment type."
        },
        "requireResidentKey": {
          "type": "boolean",
          "description": "Whether the authenticator should store the created key so that the key\ncan later be selected given only an RP ID (e.g. when |allow_credentials|\nis empty)."
        },
        "userVerification": {
          "$ref": "#/definitions/fidoUserVerificationRequirement",
          "description": "Indicates the relying party's need for a user-verifying authenticator."
        }
      },
      "description": "See https://w3c.github.io/webauthn/#dictdef-authenticatorselectioncriteria."
    },
    "fidoAuthenticatorTransport": {
      "type": "string",
      "enum": [
        "USB",
        "NFC",
        "BLE",
        "CABLE",
        "INTERNAL"
      ],
      "default": "USB"
    },
    "fidoCableRegistration": {
      "type": "object",
      "properties": {
        "versions": {
          "type": "string",
          "format": "byte",
          "description": "The caBLE versions supported by the relying party."
        },
        "relyingPartyPublicKey": {
          "type": "string",
          "format": "byte",
          "description": "The 65-byte ECDSA ephemeral public key belonging to the relying party\nfor use in establishing an encrypted caBLE channel with an authenticator."
        }
      },
      "description": "Cloud-assisted BLE extension data for makeCredential."
    },
    "fidoProtectionPolicy": {
      "type": "string",
      "enum": [
        "UNSPECIFIED",
        "NONE_PROTECTION_POLICY",
        "UV_OR_CRED_ID_REQUIRED",
        "UV_REQUIRED"
      ],
      "default": "UNSPECIFIED",
      "description": " - UNSPECIFIED: UNSPECIFIED means that no value was given at the Javascript level."
    },
    "fidoPublicKeyCredentialCreationOptions": {
      "type": "object",
      "properties": {
        "relyingParty": {
          "$ref": "#/definitions/fidoPublicKeyCredentialRpEntity",
          "description": "Information about the relying party and user entities, respectively.\nUsed by the authenticator to create or retrieve an appropriate public key\ncredential for the requested account."
        },
        "user": {
          "$ref": "#/definitions/fidoPublicKeyCredentialUserEntity"
        },
        "challenge": {
          "type": "string",
          "format": "byte",
          "description": "An indefinite-length blob passed from the the relying party server,\nto be sent to an authenticator to make a credential."
        },
        "publicKeyParameters": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/fidoPublicKeyCredentialParameters"
          },
          "description": "Parameters defining the type of created credential that the relying\nparty would accept."
        },
        "adjustedTimeout": {
          "type": "string",
          "format": "int64",
          "description": "Time in ms to wait for an authenticator to complete an operation.\nAdjusted to fall within a client-defined range."
        },
        "excludeCredentials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/fidoPublicKeyCredentialDescriptor"
          },
          "title": "A list of credentials the relying party knows about. If an\nauthenticator has one of these credentials, it should not\ncreate a new one"
        },
        "authenticatorSelection": {
          "$ref": "#/definitions/fidoAuthenticatorSelectionCriteria",
          "description": "Specify the relying party's authenticator attribute requirements."
        },
        "attestation": {
          "$ref": "#/definitions/fidoAttestationConveyancePreference",
          "description": "Specifies whether the RP wants attestation information for the created\ncredential."
        },
        "cableRegistrationData": {
          "$ref": "#/definitions/fidoCableRegistration",
          "description": "The contents of the cloud assisted BLE extension for makeCredential\nrequests, if any. This extension permits browsers and authenticator\ndevices to establish a pairingless BLE connection.\nTODO(crbug.com/842371): Add link to spec when available."
        },
        "hmacCreateSecret": {
          "type": "boolean",
          "title": "The contents of the hmacCreateSecret extension, if any. See\nhttps://fidoalliance.org/specs/fido-v2.0-rd-20180702/fido-client-to-authenticator-protocol-v2.0-rd-20180702.html#sctn-hmac-secret-extension"
        },
        "protectionPolicy": {
          "$ref": "#/definitions/fidoProtectionPolicy",
          "title": "The value of the `credentialProtectionPolicy` extension, or UNSPECIFIED if\nnone was provided"
        },
        "enforceProtectionPolicy": {
          "type": "boolean",
          "title": "The value of the `enforceCredentialProtectionPolicy`, or false if none was\nprovided"
        },
        "appidExclude": {
          "type": "string"
        }
      },
      "description": "Parameters passed into calls to MakeCredential."
    },
    "fidoPublicKeyCredentialDescriptor": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fidoPublicKeyCredentialType"
        },
        "id": {
          "type": "string",
          "format": "byte",
          "description": "Blob representing a credential key handle. Up to 255 bytes for\nU2F authenticators."
        },
        "transports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/fidoAuthenticatorTransport"
          }
        }
      },
      "description": "Describes the credentials that the relying party already knows about for\nthe given account. If any of these are known to the authenticator,\nit should not create a new credential."
    },
    "fidoPublicKeyCredentialParameters": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/fidoPublicKeyCredentialType"
        },
        "algorithmIdentifier": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Parameters that are used to generate an appropriate public key credential."
    },
    "fidoPublicKeyCredentialRpEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "An ASCII serialization of an origin."
        },
        "name": {
          "type": "string",
          "description": "Friendly name associated with the relying party intended for display.\ne.g. \"Acme Corporation\"."
        },
        "icon": {
          "$ref": "#/definitions/fidoUrl",
          "description": "Image associated with the entity. e.g. a relying party's logo."
        }
      },
      "description": "Information about the relying party. These fields take arbitrary input."
    },
    "fidoPublicKeyCredentialType": {
      "type": "string",
      "enum": [
        "PUBLIC_KEY"
      ],
      "default": "PUBLIC_KEY"
    },
    "fidoPublicKeyCredentialUserEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "byte",
          "description": "Unique identifier for a user account An opaque byte sequence with a\nmaximum size of 64 bytes."
        },
        "name": {
          "type": "string",
          "description": "Friendly name associated with the entity intended for display.\ne.g.\"john.p.smith@example.com\" or \"+14255551234\" for a user."
        },
        "icon": {
          "$ref": "#/definitions/fidoUrl",
          "description": "Image associated with the entity. For example, a user's avatar."
        },
        "displayName": {
          "type": "string",
          "description": "Contains a friendly name for the user account (e.g., \"John P. Smith\")."
        }
      },
      "description": "Information about the account held by the user. These fields take\narbitrary input."
    },
    "fidoUrl": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "fidoUserVerificationRequirement": {
      "type": "string",
      "enum": [
        "REQUIRED",
        "PREFERRED",
        "DISCOURAGED"
      ],
      "default": "REQUIRED"
    },
    "idpGetCredentialCreateOptionsResponse": {
      "type": "object",
      "properties": {
        "publicKey": {
          "$ref": "#/definitions/fidoPublicKeyCredentialCreationOptions"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
