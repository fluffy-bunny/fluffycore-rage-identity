{
  "swagger": "2.0",
  "info": {
    "title": "proto/oidc/flows/oidc_flow.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "OIDCFlowStore"
    },
    {
      "name": "ExternalOauth2FlowStore"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {},
  "definitions": {
    "flowsDeleteAuthorizationRequestStateResponse": {
      "type": "object"
    },
    "flowsDeleteExternalOauth2FinalResponse": {
      "type": "object"
    },
    "flowsGetAuthorizationRequestStateResponse": {
      "type": "object",
      "properties": {
        "authorizationRequestState": {
          "$ref": "#/definitions/modelsAuthorizationRequestState"
        }
      }
    },
    "flowsGetExternalOauth2FinalResponse": {
      "type": "object",
      "properties": {
        "externalOauth2Final": {
          "$ref": "#/definitions/modelsExternalOauth2Final"
        }
      }
    },
    "flowsStoreAuthorizationRequestStateResponse": {
      "type": "object"
    },
    "flowsStoreExternalOauth2FinalResponse": {
      "type": "object"
    },
    "modelsAuthorizationRequest": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "responseType": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "redirectUri": {
          "type": "string"
        },
        "audience": {
          "type": "string"
        },
        "codeChallenge": {
          "type": "string"
        },
        "codeChallengeMethod": {
          "type": "string"
        },
        "acrValues": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "code": {
          "type": "string",
          "title": "this is the internal code that will be returned to the OIDC client"
        },
        "idpHint": {
          "type": "string",
          "title": "IDPHint is the idp_hint of the external idp that the authorization must authenticate against"
        },
        "candidateUserId": {
          "type": "string",
          "description": "CandidateUserID is the user_id of the candidate user that if the external IDP has no link should be linked to\nThe candidate user must exist."
        }
      }
    },
    "modelsAuthorizationRequestState": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "id to make it db friendly"
        },
        "request": {
          "$ref": "#/definitions/modelsAuthorizationRequest"
        },
        "identity": {
          "$ref": "#/definitions/modelsOIDCIdentity"
        },
        "externalIdentity": {
          "$ref": "#/definitions/modelsIdentity"
        },
        "directive": {
          "type": "string"
        }
      }
    },
    "modelsExternalOauth2Final": {
      "type": "object",
      "properties": {
        "request": {
          "$ref": "#/definitions/modelsExternalOauth2Request"
        },
        "identity": {
          "$ref": "#/definitions/modelsIdentity"
        }
      }
    },
    "modelsExternalOauth2Request": {
      "type": "object",
      "properties": {
        "idpHint": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "codeChallenge": {
          "type": "string"
        },
        "codeChallengeMethod": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "codeChallengeVerifier": {
          "type": "string"
        },
        "nonce": {
          "type": "string"
        },
        "directive": {
          "type": "string"
        },
        "parentState": {
          "type": "string"
        }
      }
    },
    "modelsIdentity": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "idpSlug": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        }
      }
    },
    "modelsOIDCIdentity": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "idpSlug": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        },
        "acr": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "amr": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
