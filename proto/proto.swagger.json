{
  "swagger": "2.0",
  "info": {
    "title": "proto/oidc/user/user.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/user/_create": {
      "post": {
        "summary": "Create user",
        "operationId": "UserService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/user/_link": {
      "post": {
        "operationId": "UserService_LinkUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userLinkUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLinkUsersRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/user/_search": {
      "post": {
        "summary": "List users",
        "operationId": "UserService_ListUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userListUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/user/_unlink": {
      "post": {
        "operationId": "UserService_UnlinkUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUnlinkUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUnlinkUsersRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/user/_update": {
      "post": {
        "summary": "Update user",
        "operationId": "UserService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/user/subject/{subject}": {
      "get": {
        "summary": "Get user",
        "operationId": "UserService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subject",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete user",
        "operationId": "UserService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "subject",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "modelsAddress": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "modelsAddressUpdate": {
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "modelsIdentity": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "idpSlug": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        }
      }
    },
    "modelsIdentityUpdate": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "emailVerified": {
          "type": "boolean"
        }
      }
    },
    "modelsLinkedIdentities": {
      "type": "object",
      "properties": {
        "identities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/modelsIdentity"
          }
        }
      }
    },
    "modelsLinkedIdentitiesUpdate": {
      "type": "object",
      "properties": {
        "granular": {
          "$ref": "#/definitions/modelsLinkedIdentitiesUpdateGranular"
        },
        "replace": {
          "$ref": "#/definitions/modelsLinkedIdentities"
        }
      }
    },
    "modelsLinkedIdentitiesUpdateGranular": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/modelsIdentity"
          }
        },
        "remove": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/modelsIdentity"
          }
        }
      }
    },
    "modelsPassword": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        }
      }
    },
    "modelsPasswordUpdate": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string"
        }
      }
    },
    "modelsProfile": {
      "type": "object",
      "properties": {
        "givenName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesPhoneNumber"
          }
        },
        "address": {
          "$ref": "#/definitions/modelsAddress"
        }
      }
    },
    "modelsProfileUpdate": {
      "type": "object",
      "properties": {
        "givenName": {
          "type": "string"
        },
        "familyName": {
          "type": "string"
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesPhoneNumberUpdate"
          }
        },
        "address": {
          "$ref": "#/definitions/modelsAddressUpdate"
        }
      }
    },
    "modelsRecovery": {
      "type": "object",
      "properties": {
        "emails": {
          "$ref": "#/definitions/typesStringValues"
        }
      }
    },
    "modelsRecoveryUpdate": {
      "type": "object",
      "properties": {
        "emails": {
          "$ref": "#/definitions/typesStringArrayUpdate"
        }
      }
    },
    "modelsUser": {
      "type": "object",
      "properties": {
        "rootIdentity": {
          "$ref": "#/definitions/modelsIdentity"
        },
        "linkedIdentities": {
          "$ref": "#/definitions/modelsLinkedIdentities"
        },
        "recovery": {
          "$ref": "#/definitions/modelsRecovery"
        },
        "password": {
          "$ref": "#/definitions/modelsPassword"
        },
        "state": {
          "$ref": "#/definitions/modelsUserState"
        },
        "profile": {
          "$ref": "#/definitions/modelsProfile"
        }
      }
    },
    "modelsUserState": {
      "type": "string",
      "enum": [
        "USER_STATE_UNSPECIFIED",
        "USER_STATE_ACTIVE",
        "USER_STATE_DISABLED",
        "USER_STATE_DELETED",
        "USER_STATE_PENDING"
      ],
      "default": "USER_STATE_UNSPECIFIED"
    },
    "modelsUserStateFilterExpression": {
      "type": "object",
      "properties": {
        "eq": {
          "$ref": "#/definitions/modelsUserState"
        },
        "in": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/modelsUserState"
          }
        }
      }
    },
    "modelsUserStateValue": {
      "type": "object",
      "properties": {
        "vale": {
          "$ref": "#/definitions/modelsUserState"
        }
      }
    },
    "modelsUserUpdate": {
      "type": "object",
      "properties": {
        "rootIdentity": {
          "$ref": "#/definitions/modelsIdentityUpdate"
        },
        "linkedIdentities": {
          "$ref": "#/definitions/modelsLinkedIdentitiesUpdate"
        },
        "recovery": {
          "$ref": "#/definitions/modelsRecoveryUpdate"
        },
        "password": {
          "$ref": "#/definitions/modelsPasswordUpdate"
        },
        "state": {
          "$ref": "#/definitions/modelsUserStateValue"
        },
        "profile": {
          "$ref": "#/definitions/modelsProfileUpdate"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesIDFilterExpression": {
      "type": "object",
      "properties": {
        "eq": {
          "type": "string"
        },
        "in": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesOrder": {
      "type": "string",
      "enum": [
        "ORDER_UNSPECIFIED",
        "ASC",
        "DESC"
      ],
      "default": "ORDER_UNSPECIFIED",
      "title": "- ORDER_UNSPECIFIED: Conventional default for enums. Do not use this.\n - ASC: Ascending order\n - DESC: Descending order"
    },
    "typesPagination": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "Maximum number of entries to retrieve"
        },
        "iterator": {
          "type": "string"
        },
        "order": {
          "$ref": "#/definitions/typesOrder"
        }
      }
    },
    "typesPaginationResponse": {
      "type": "object",
      "properties": {
        "iterator": {
          "type": "string"
        },
        "prevIterator": {
          "type": "string"
        },
        "totalAvailable": {
          "type": "boolean",
          "title": "Is a total count of records available?"
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "Total number of records available (if totalAvailable = true)"
        },
        "noMoreData": {
          "type": "boolean",
          "title": "There is no more data"
        }
      },
      "description": "PaginationResponse ..."
    },
    "typesPhoneNumber": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/typesPhoneType"
        }
      }
    },
    "typesPhoneNumberUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "countryCode": {
          "type": "integer",
          "format": "int64"
        },
        "number": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/typesPhoneTypeValue"
        }
      }
    },
    "typesPhoneType": {
      "type": "string",
      "enum": [
        "PHONE_TYPE_UNSPECIFIED",
        "PHONE_TYPE_MOBILE",
        "PHONE_TYPE_HOME",
        "PHONE_TYPE_WORK"
      ],
      "default": "PHONE_TYPE_UNSPECIFIED"
    },
    "typesPhoneTypeValue": {
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/definitions/typesPhoneType"
        }
      }
    },
    "typesStringArrayUpdate": {
      "type": "object",
      "properties": {
        "granular": {
          "$ref": "#/definitions/typesStringArrayUpdateGranular"
        },
        "replace": {
          "$ref": "#/definitions/typesStringValues"
        }
      }
    },
    "typesStringArrayUpdateGranular": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remove": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "typesStringFilterExpression": {
      "type": "object",
      "properties": {
        "eq": {
          "type": "string"
        },
        "contains": {
          "type": "string"
        },
        "in": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ne": {
          "type": "string"
        }
      }
    },
    "typesStringValues": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "userCreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        }
      }
    },
    "userCreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        }
      }
    },
    "userDeleteUserResponse": {
      "type": "object"
    },
    "userFilter": {
      "type": "object",
      "properties": {
        "rootIdentity": {
          "$ref": "#/definitions/userIdentityFilter"
        },
        "linkedIdentity": {
          "$ref": "#/definitions/userIdentityFilter"
        },
        "state": {
          "$ref": "#/definitions/modelsUserStateFilterExpression"
        },
        "and": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userFilter"
          },
          "title": "AST"
        },
        "or": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userFilter"
          }
        },
        "not": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/userFilter"
          }
        }
      }
    },
    "userGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        }
      }
    },
    "userIdentityFilter": {
      "type": "object",
      "properties": {
        "subject": {
          "$ref": "#/definitions/typesIDFilterExpression"
        },
        "idpSlug": {
          "$ref": "#/definitions/typesIDFilterExpression"
        },
        "email": {
          "$ref": "#/definitions/typesStringFilterExpression"
        }
      }
    },
    "userLinkUsersRequest": {
      "type": "object",
      "properties": {
        "rootSubject": {
          "type": "string"
        },
        "externalIdentity": {
          "$ref": "#/definitions/modelsIdentity"
        }
      }
    },
    "userLinkUsersResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        }
      }
    },
    "userListUserRequest": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/userFilter",
          "title": "Filter"
        },
        "pagination": {
          "$ref": "#/definitions/typesPagination",
          "title": "Pagination"
        }
      }
    },
    "userListUserResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/modelsUser"
          }
        },
        "pagination": {
          "$ref": "#/definitions/typesPaginationResponse",
          "title": "Pagination details"
        }
      }
    },
    "userUnlinkUsersRequest": {
      "type": "object",
      "properties": {
        "rootSubject": {
          "type": "string"
        },
        "externalIdentity": {
          "$ref": "#/definitions/modelsIdentity"
        }
      }
    },
    "userUnlinkUsersResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        }
      }
    },
    "userUpdateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUserUpdate"
        }
      }
    },
    "userUpdateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/modelsUser"
        }
      }
    }
  }
}
