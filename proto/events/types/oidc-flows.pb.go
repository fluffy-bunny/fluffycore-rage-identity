// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: proto/events/types/oidc-flows.proto

package types

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IdpType int32

const (
	IdpType_IDP_TYPE_UNSPECIFIED IdpType = 0
	IdpType_IDP_TYPE_ROOT        IdpType = 1
	IdpType_IDP_TYPE_LINKED      IdpType = 2
)

// Enum value maps for IdpType.
var (
	IdpType_name = map[int32]string{
		0: "IDP_TYPE_UNSPECIFIED",
		1: "IDP_TYPE_ROOT",
		2: "IDP_TYPE_LINKED",
	}
	IdpType_value = map[string]int32{
		"IDP_TYPE_UNSPECIFIED": 0,
		"IDP_TYPE_ROOT":        1,
		"IDP_TYPE_LINKED":      2,
	}
)

func (x IdpType) Enum() *IdpType {
	p := new(IdpType)
	*p = x
	return p
}

func (x IdpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdpType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_types_oidc_flows_proto_enumTypes[0].Descriptor()
}

func (IdpType) Type() protoreflect.EnumType {
	return &file_proto_events_types_oidc_flows_proto_enumTypes[0]
}

func (x IdpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdpType.Descriptor instead.
func (IdpType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_types_oidc_flows_proto_rawDescGZIP(), []int{0}
}

type LoginEventType int32

const (
	LoginEventType_LOGIN_EVENT_TYPE_UNSPECIFIED      LoginEventType = 0
	LoginEventType_LOGIN_EVENT_TYPE_SUCCESS          LoginEventType = 1
	LoginEventType_LOGIN_EVENT_TYPE_PASSWORD_FAIL    LoginEventType = 2
	LoginEventType_LOGIN_EVENT_TYPE_LINKED_NOT_FOUND LoginEventType = 3
	LoginEventType_LOGIN_EVENT_TYPE_PASSKEY_FAIL     LoginEventType = 4
)

// Enum value maps for LoginEventType.
var (
	LoginEventType_name = map[int32]string{
		0: "LOGIN_EVENT_TYPE_UNSPECIFIED",
		1: "LOGIN_EVENT_TYPE_SUCCESS",
		2: "LOGIN_EVENT_TYPE_PASSWORD_FAIL",
		3: "LOGIN_EVENT_TYPE_LINKED_NOT_FOUND",
		4: "LOGIN_EVENT_TYPE_PASSKEY_FAIL",
	}
	LoginEventType_value = map[string]int32{
		"LOGIN_EVENT_TYPE_UNSPECIFIED":      0,
		"LOGIN_EVENT_TYPE_SUCCESS":          1,
		"LOGIN_EVENT_TYPE_PASSWORD_FAIL":    2,
		"LOGIN_EVENT_TYPE_LINKED_NOT_FOUND": 3,
		"LOGIN_EVENT_TYPE_PASSKEY_FAIL":     4,
	}
)

func (x LoginEventType) Enum() *LoginEventType {
	p := new(LoginEventType)
	*p = x
	return p
}

func (x LoginEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoginEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_types_oidc_flows_proto_enumTypes[1].Descriptor()
}

func (LoginEventType) Type() protoreflect.EnumType {
	return &file_proto_events_types_oidc_flows_proto_enumTypes[1]
}

func (x LoginEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoginEventType.Descriptor instead.
func (LoginEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_types_oidc_flows_proto_rawDescGZIP(), []int{1}
}

type LoginEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId       string         `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Subject        string         `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Email          string         `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Acr            []string       `protobuf:"bytes,4,rep,name=acr,proto3" json:"acr,omitempty"`
	Amr            []string       `protobuf:"bytes,5,rep,name=amr,proto3" json:"amr,omitempty"`
	Idp            []string       `protobuf:"bytes,6,rep,name=idp,proto3" json:"idp,omitempty"`
	LoginEventType LoginEventType `protobuf:"varint,7,opt,name=login_event_type,json=loginEventType,proto3,enum=proto.types.LoginEventType" json:"login_event_type,omitempty"`
}

func (x *LoginEvent) Reset() {
	*x = LoginEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_types_oidc_flows_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginEvent) ProtoMessage() {}

func (x *LoginEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_types_oidc_flows_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginEvent.ProtoReflect.Descriptor instead.
func (*LoginEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_types_oidc_flows_proto_rawDescGZIP(), []int{0}
}

func (x *LoginEvent) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *LoginEvent) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *LoginEvent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginEvent) GetAcr() []string {
	if x != nil {
		return x.Acr
	}
	return nil
}

func (x *LoginEvent) GetAmr() []string {
	if x != nil {
		return x.Amr
	}
	return nil
}

func (x *LoginEvent) GetIdp() []string {
	if x != nil {
		return x.Idp
	}
	return nil
}

func (x *LoginEvent) GetLoginEventType() LoginEventType {
	if x != nil {
		return x.LoginEventType
	}
	return LoginEventType_LOGIN_EVENT_TYPE_UNSPECIFIED
}

var File_proto_events_types_oidc_flows_proto protoreflect.FileDescriptor

var file_proto_events_types_oidc_flows_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2f, 0x6f, 0x69, 0x64, 0x63, 0x2d, 0x66, 0x6c, 0x6f, 0x77, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd6, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x63, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x63, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x72, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x03, 0x61, 0x6d, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x64, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0e, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x4b, 0x0a,
	0x07, 0x49, 0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x44, 0x50, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x44, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x4f, 0x4f, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x44, 0x50, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xbe, 0x01, 0x0a, 0x0e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x1c, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x22, 0x0a,
	0x1e, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10,
	0x02, 0x12, 0x25, 0x0a, 0x21, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x4c, 0x4f, 0x47, 0x49,
	0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53,
	0x53, 0x4b, 0x45, 0x59, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x04, 0x42, 0x98, 0x01, 0x0a, 0x25,
	0x63, 0x6f, 0x6d, 0x2e, 0x66, 0x6c, 0x75, 0x66, 0x66, 0x79, 0x62, 0x75, 0x6e, 0x6e, 0x79, 0x2e,
	0x72, 0x61, 0x67, 0x65, 0x6f, 0x69, 0x64, 0x63, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x50, 0x01, 0x5a, 0x49, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x75, 0x66, 0x66, 0x79, 0x2d, 0x62, 0x75, 0x6e, 0x6e, 0x79,
	0x2f, 0x66, 0x6c, 0x75, 0x66, 0x66, 0x79, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x72, 0x61, 0x67, 0x65,
	0x2d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x3b, 0x74, 0x79, 0x70,
	0x65, 0x73, 0xaa, 0x02, 0x21, 0x46, 0x6c, 0x75, 0x66, 0x66, 0x79, 0x42, 0x75, 0x6e, 0x6e, 0x79,
	0x2e, 0x52, 0x61, 0x67, 0x65, 0x4f, 0x69, 0x64, 0x63, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x54, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_events_types_oidc_flows_proto_rawDescOnce sync.Once
	file_proto_events_types_oidc_flows_proto_rawDescData = file_proto_events_types_oidc_flows_proto_rawDesc
)

func file_proto_events_types_oidc_flows_proto_rawDescGZIP() []byte {
	file_proto_events_types_oidc_flows_proto_rawDescOnce.Do(func() {
		file_proto_events_types_oidc_flows_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_events_types_oidc_flows_proto_rawDescData)
	})
	return file_proto_events_types_oidc_flows_proto_rawDescData
}

var file_proto_events_types_oidc_flows_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_events_types_oidc_flows_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_events_types_oidc_flows_proto_goTypes = []any{
	(IdpType)(0),        // 0: proto.types.IdpType
	(LoginEventType)(0), // 1: proto.types.LoginEventType
	(*LoginEvent)(nil),  // 2: proto.types.LoginEvent
}
var file_proto_events_types_oidc_flows_proto_depIdxs = []int32{
	1, // 0: proto.types.LoginEvent.login_event_type:type_name -> proto.types.LoginEventType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_events_types_oidc_flows_proto_init() }
func file_proto_events_types_oidc_flows_proto_init() {
	if File_proto_events_types_oidc_flows_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_events_types_oidc_flows_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*LoginEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_events_types_oidc_flows_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_types_oidc_flows_proto_goTypes,
		DependencyIndexes: file_proto_events_types_oidc_flows_proto_depIdxs,
		EnumInfos:         file_proto_events_types_oidc_flows_proto_enumTypes,
		MessageInfos:      file_proto_events_types_oidc_flows_proto_msgTypes,
	}.Build()
	File_proto_events_types_oidc_flows_proto = out.File
	file_proto_events_types_oidc_flows_proto_rawDesc = nil
	file_proto_events_types_oidc_flows_proto_goTypes = nil
	file_proto_events_types_oidc_flows_proto_depIdxs = nil
}
