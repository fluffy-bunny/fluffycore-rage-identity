// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.
// Code generated grpcGateway

package webauthn

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// IFluffyCoreWebAuthNServiceServer defines the grpc server
type IFluffyCoreWebAuthNServiceServer interface {
	WebAuthNServiceServer
}

type UnimplementedFluffyCoreWebAuthNServiceServerEndpointRegistration struct {
}

func (UnimplementedFluffyCoreWebAuthNServiceServerEndpointRegistration) RegisterFluffyCoreHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// WebAuthNServiceFluffyCoreServer defines the grpc server truct
type WebAuthNServiceFluffyCoreServer struct {
	UnimplementedWebAuthNServiceServer
	UnimplementedFluffyCoreWebAuthNServiceServerEndpointRegistration
}

// RegisterFluffyCoreGRPCService the server with grpc
func (srv *WebAuthNServiceFluffyCoreServer) RegisterFluffyCoreGRPCService(s *grpc.Server) {
	RegisterWebAuthNServiceServer(s, srv)
}

// AddWebAuthNServiceServerWithExternalRegistration adds the fluffycore aware grpc server and external registration service.  Mainly used for grpc-gateway
func AddWebAuthNServiceServerWithExternalRegistration(cb fluffy_dozm_di.ContainerBuilder, ctor any, register func() endpoint.IEndpointRegistration) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, register)
	fluffy_dozm_di.AddScoped[IFluffyCoreWebAuthNServiceServer](cb, ctor)
}

// AddWebAuthNServiceServer adds the fluffycore aware grpc server
func AddWebAuthNServiceServer(cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	AddWebAuthNServiceServerWithExternalRegistration(cb, ctor, func() endpoint.IEndpointRegistration {
		return &WebAuthNServiceFluffyCoreServer{}
	})
}

// GetCredentialCreateOptions...
func (s *WebAuthNServiceFluffyCoreServer) GetCredentialCreateOptions(ctx context.Context, request *GetCredentialCreateOptionsRequest) (*GetCredentialCreateOptionsResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreWebAuthNServiceServer](requestContainer)
	return downstreamService.GetCredentialCreateOptions(ctx, request)
}
