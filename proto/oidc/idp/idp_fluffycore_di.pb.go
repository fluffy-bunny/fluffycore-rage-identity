// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.
// Code generated grpcGateway

package idp

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// IFluffyCoreIDPServiceServer defines the grpc server
type IFluffyCoreIDPServiceServer interface {
	IDPServiceServer
}

type UnimplementedFluffyCoreIDPServiceServerEndpointRegistration struct {
}

func (UnimplementedFluffyCoreIDPServiceServerEndpointRegistration) RegisterFluffyCoreHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// IDPServiceFluffyCoreServer defines the grpc server truct
type IDPServiceFluffyCoreServer struct {
	UnimplementedIDPServiceServer
	UnimplementedFluffyCoreIDPServiceServerEndpointRegistration
}

// RegisterFluffyCoreGRPCService the server with grpc
func (srv *IDPServiceFluffyCoreServer) RegisterFluffyCoreGRPCService(s *grpc.Server) {
	RegisterIDPServiceServer(s, srv)
}

// AddIDPServiceServerWithExternalRegistration adds the fluffycore aware grpc server and external registration service.  Mainly used for grpc-gateway
func AddIDPServiceServerWithExternalRegistration(cb fluffy_dozm_di.ContainerBuilder, ctor any, register func() endpoint.IEndpointRegistration) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, register)
	fluffy_dozm_di.AddScoped[IFluffyCoreIDPServiceServer](cb, ctor)
}

// AddIDPServiceServer adds the fluffycore aware grpc server
func AddIDPServiceServer(cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	AddIDPServiceServerWithExternalRegistration(cb, ctor, func() endpoint.IEndpointRegistration {
		return &IDPServiceFluffyCoreServer{}
	})
}

// CreateIDP...
func (s *IDPServiceFluffyCoreServer) CreateIDP(ctx context.Context, request *CreateIDPRequest) (*CreateIDPResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreIDPServiceServer](requestContainer)
	return downstreamService.CreateIDP(ctx, request)
}

// GetIDP...
func (s *IDPServiceFluffyCoreServer) GetIDP(ctx context.Context, request *GetIDPRequest) (*GetIDPResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreIDPServiceServer](requestContainer)
	return downstreamService.GetIDP(ctx, request)
}

// GetIDPBySlug...
func (s *IDPServiceFluffyCoreServer) GetIDPBySlug(ctx context.Context, request *GetIDPBySlugRequest) (*GetIDPBySlugResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreIDPServiceServer](requestContainer)
	return downstreamService.GetIDPBySlug(ctx, request)
}

// DeleteIDP...
func (s *IDPServiceFluffyCoreServer) DeleteIDP(ctx context.Context, request *DeleteIDPRequest) (*DeleteIDPResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreIDPServiceServer](requestContainer)
	return downstreamService.DeleteIDP(ctx, request)
}

// UpdateIDP...
func (s *IDPServiceFluffyCoreServer) UpdateIDP(ctx context.Context, request *UpdateIDPRequest) (*UpdateIDPResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreIDPServiceServer](requestContainer)
	return downstreamService.UpdateIDP(ctx, request)
}

// ListIDP...
func (s *IDPServiceFluffyCoreServer) ListIDP(ctx context.Context, request *ListIDPRequest) (*ListIDPResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreIDPServiceServer](requestContainer)
	return downstreamService.ListIDP(ctx, request)
}
