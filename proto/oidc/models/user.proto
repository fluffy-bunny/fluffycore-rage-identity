syntax = "proto3";

option go_package = "github.com/fluffy-bunny/fluffycore-rage-identity/proto/oidc/models;models";
option java_multiple_files = true;
option java_package = "com.fluffybunny.rageoidc.models";
option csharp_namespace = "FluffyBunny.RageOidc.Oidc.Models";


package proto.oidc.models;

import "google/protobuf/descriptor.proto";
import "google/protobuf/wrappers.proto";
import "proto/types/primitives.proto";
import "proto/types/filter.proto";
import "proto/types/phone_number.proto";
 
extend google.protobuf.FieldOptions {
    string param = 50000; // Choose a unique number for your extension
  }
enum UserState {
    USER_STATE_UNSPECIFIED = 0;
    USER_STATE_ACTIVE = 1;
    USER_STATE_DISABLED = 2;
    USER_STATE_DELETED = 3;
    USER_STATE_PENDING = 4;
}

message UserStateFilterExpression {
    option (proto.types.filter_expression) = true;

    UserState eq          = 1 [(proto.types.op) = OP_EQ];
    repeated UserState in = 2 [(proto.types.op) = OP_IN];
}

message UserStateValue {
    UserState vale = 1;
}
message Password {
    string  hash = 1;
}
message PasswordUpdate {
    google.protobuf.StringValue hash = 1;
}
message Identity {
    string subject = 1;
    string idp_slug = 2;
    string email = 3;
    bool email_verified = 4;
}
message OIDCIdentity {
    string subject = 1;
    string idp_slug = 2;
    string email = 3;
    bool email_verified = 4;
    repeated string acr = 5;
    repeated string amr = 6;
}
message ExternalOauth2Request {
    string idp_hint = 1;
    string client_id = 2;
    string code_challenge = 3;
    string code_challenge_method = 4;
    string state = 5;
    string code_challenge_verifier = 6;
    string nonce = 7;
    string directive = 8;
    string parent_state = 9;

}
message ExternalOauth2Final {
    ExternalOauth2Request request = 1;
    Identity identity = 2;
}
message AuthorizationRequest {
    string client_id = 1;
    string response_type = 2;
    string scope = 3;
    string state = 4;
    string redirect_uri = 5;
    string audience = 6;
    string code_challenge = 7;
    string code_challenge_method = 8;
    string acr_values = 9;
    string nonce = 10;
    // this is the internal code that will be returned to the OIDC client
    string code = 11;
    // IDPHint is the idp_hint of the external idp that the authorization must authenticate against
    string idp_hint = 12;
    // CandidateUserID is the user_id of the candidate user that if the external IDP has no link should be linked to
    // The candidate user must exist.
    string candidate_user_id = 13;
}

message AuthorizationFinal {
    AuthorizationRequest request = 1;
    OIDCIdentity identity = 2;
    Identity external_identity = 3;
    string directive = 4;

}

message LinkedIdentities{
    repeated Identity identities = 1;
}

message IdentityUpdate {
    string subject = 1;
    google.protobuf.StringValue email = 3;
    google.protobuf.BoolValue email_verified = 4;

}


message LinkedIdentitiesUpdate {
    message Granular{
        repeated Identity add = 1;
        repeated Identity remove = 2;
     }
    oneof update {
        Granular            granular = 1;
        LinkedIdentities    replace = 2;
    }
}
message Recovery{
    proto.types.StringValues emails = 1;
}
message RecoveryUpdate{
    proto.types.StringArrayUpdate emails = 1;
}

message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string postal_code = 4;
    string country = 5;
}
message AddressUpdate {
    google.protobuf.StringValue street = 1;
    google.protobuf.StringValue city = 2;
    google.protobuf.StringValue state = 3;
    google.protobuf.StringValue postal_code = 4;
    google.protobuf.StringValue country = 5;
}
message Profile{
    string given_name = 1;
    string family_name = 2;
    repeated proto.types.PhoneNumberDTO phone_numbers = 3;
    Address address = 4;
}
message ProfileUpdate{
    google.protobuf.StringValue given_name = 1;
    google.protobuf.StringValue family_name = 2;
    repeated proto.types.PhoneNumberDTOUpdate phone_numbers = 3;
    AddressUpdate address = 4;
}
message User {
    uint64 id = 1;

    Identity            root_identity = 2;
    LinkedIdentities    linked_identities = 3;
    Recovery            recovery = 4;
    Password            password = 5;
    UserState           state = 6;
    Profile             profile = 7;
}

message UserUpdate {
    IdentityUpdate          root_identity = 1;
    LinkedIdentitiesUpdate  linked_identities = 2;
    RecoveryUpdate          recovery = 3;
    PasswordUpdate          password = 4;
    UserStateValue          state = 5;
    ProfileUpdate           profile = 6;
}

