// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.
// Code generated grpcGateway

package flows

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// IFluffyCoreAuthorizationRequestStateStoreServer defines the grpc server
type IFluffyCoreAuthorizationRequestStateStoreServer interface {
	AuthorizationRequestStateStoreServer
}

type UnimplementedFluffyCoreAuthorizationRequestStateStoreServerEndpointRegistration struct {
}

func (UnimplementedFluffyCoreAuthorizationRequestStateStoreServerEndpointRegistration) RegisterFluffyCoreHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// AuthorizationRequestStateStoreFluffyCoreServer defines the grpc server truct
type AuthorizationRequestStateStoreFluffyCoreServer struct {
	UnimplementedAuthorizationRequestStateStoreServer
	UnimplementedFluffyCoreAuthorizationRequestStateStoreServerEndpointRegistration
}

// RegisterFluffyCoreGRPCService the server with grpc
func (srv *AuthorizationRequestStateStoreFluffyCoreServer) RegisterFluffyCoreGRPCService(s *grpc.Server) {
	RegisterAuthorizationRequestStateStoreServer(s, srv)
}

// AddAuthorizationRequestStateStoreServerWithExternalRegistration adds the fluffycore aware grpc server and external registration service.  Mainly used for grpc-gateway
func AddAuthorizationRequestStateStoreServerWithExternalRegistration(cb fluffy_dozm_di.ContainerBuilder, ctor any, register func() endpoint.IEndpointRegistration) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, register)
	fluffy_dozm_di.AddScoped[IFluffyCoreAuthorizationRequestStateStoreServer](cb, ctor)
}

// AddAuthorizationRequestStateStoreServer adds the fluffycore aware grpc server
func AddAuthorizationRequestStateStoreServer(cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	AddAuthorizationRequestStateStoreServerWithExternalRegistration(cb, ctor, func() endpoint.IEndpointRegistration {
		return &AuthorizationRequestStateStoreFluffyCoreServer{}
	})
}

// StoreAuthorizationRequestState...
func (s *AuthorizationRequestStateStoreFluffyCoreServer) StoreAuthorizationRequestState(ctx context.Context, request *StoreAuthorizationRequestStateRequest) (*StoreAuthorizationRequestStateResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreAuthorizationRequestStateStoreServer](requestContainer)
	return downstreamService.StoreAuthorizationRequestState(ctx, request)
}

// GetAuthorizationRequestState...
func (s *AuthorizationRequestStateStoreFluffyCoreServer) GetAuthorizationRequestState(ctx context.Context, request *GetAuthorizationRequestStateRequest) (*GetAuthorizationRequestStateResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreAuthorizationRequestStateStoreServer](requestContainer)
	return downstreamService.GetAuthorizationRequestState(ctx, request)
}

// DeleteAuthorizationRequestState...
func (s *AuthorizationRequestStateStoreFluffyCoreServer) DeleteAuthorizationRequestState(ctx context.Context, request *DeleteAuthorizationRequestStateRequest) (*DeleteAuthorizationRequestStateResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreAuthorizationRequestStateStoreServer](requestContainer)
	return downstreamService.DeleteAuthorizationRequestState(ctx, request)
}
