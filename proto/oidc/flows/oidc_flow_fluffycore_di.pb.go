// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.
// Code generated grpcGateway

package flows

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// IFluffyCoreOIDCFlowStoreServer defines the grpc server
type IFluffyCoreOIDCFlowStoreServer interface {
	OIDCFlowStoreServer
}

type UnimplementedFluffyCoreOIDCFlowStoreServerEndpointRegistration struct {
}

func (UnimplementedFluffyCoreOIDCFlowStoreServerEndpointRegistration) RegisterFluffyCoreHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// OIDCFlowStoreFluffyCoreServer defines the grpc server truct
type OIDCFlowStoreFluffyCoreServer struct {
	UnimplementedOIDCFlowStoreServer
	UnimplementedFluffyCoreOIDCFlowStoreServerEndpointRegistration
}

// RegisterFluffyCoreGRPCService the server with grpc
func (srv *OIDCFlowStoreFluffyCoreServer) RegisterFluffyCoreGRPCService(s *grpc.Server) {
	RegisterOIDCFlowStoreServer(s, srv)
}

// AddOIDCFlowStoreServerWithExternalRegistration adds the fluffycore aware grpc server and external registration service.  Mainly used for grpc-gateway
func AddOIDCFlowStoreServerWithExternalRegistration(cb fluffy_dozm_di.ContainerBuilder, ctor any, register func() endpoint.IEndpointRegistration) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, register)
	fluffy_dozm_di.AddScoped[IFluffyCoreOIDCFlowStoreServer](cb, ctor)
}

// AddOIDCFlowStoreServer adds the fluffycore aware grpc server
func AddOIDCFlowStoreServer(cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	AddOIDCFlowStoreServerWithExternalRegistration(cb, ctor, func() endpoint.IEndpointRegistration {
		return &OIDCFlowStoreFluffyCoreServer{}
	})
}

// StoreAuthorizationRequestState...
func (s *OIDCFlowStoreFluffyCoreServer) StoreAuthorizationRequestState(ctx context.Context, request *StoreAuthorizationRequestStateRequest) (*StoreAuthorizationRequestStateResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreOIDCFlowStoreServer](requestContainer)
	return downstreamService.StoreAuthorizationRequestState(ctx, request)
}

// GetAuthorizationRequestState...
func (s *OIDCFlowStoreFluffyCoreServer) GetAuthorizationRequestState(ctx context.Context, request *GetAuthorizationRequestStateRequest) (*GetAuthorizationRequestStateResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreOIDCFlowStoreServer](requestContainer)
	return downstreamService.GetAuthorizationRequestState(ctx, request)
}

// DeleteAuthorizationRequestState...
func (s *OIDCFlowStoreFluffyCoreServer) DeleteAuthorizationRequestState(ctx context.Context, request *DeleteAuthorizationRequestStateRequest) (*DeleteAuthorizationRequestStateResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreOIDCFlowStoreServer](requestContainer)
	return downstreamService.DeleteAuthorizationRequestState(ctx, request)
}

// IFluffyCoreExternalOauth2FlowStoreServer defines the grpc server
type IFluffyCoreExternalOauth2FlowStoreServer interface {
	ExternalOauth2FlowStoreServer
}

type UnimplementedFluffyCoreExternalOauth2FlowStoreServerEndpointRegistration struct {
}

func (UnimplementedFluffyCoreExternalOauth2FlowStoreServerEndpointRegistration) RegisterFluffyCoreHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// ExternalOauth2FlowStoreFluffyCoreServer defines the grpc server truct
type ExternalOauth2FlowStoreFluffyCoreServer struct {
	UnimplementedExternalOauth2FlowStoreServer
	UnimplementedFluffyCoreExternalOauth2FlowStoreServerEndpointRegistration
}

// RegisterFluffyCoreGRPCService the server with grpc
func (srv *ExternalOauth2FlowStoreFluffyCoreServer) RegisterFluffyCoreGRPCService(s *grpc.Server) {
	RegisterExternalOauth2FlowStoreServer(s, srv)
}

// AddExternalOauth2FlowStoreServerWithExternalRegistration adds the fluffycore aware grpc server and external registration service.  Mainly used for grpc-gateway
func AddExternalOauth2FlowStoreServerWithExternalRegistration(cb fluffy_dozm_di.ContainerBuilder, ctor any, register func() endpoint.IEndpointRegistration) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, register)
	fluffy_dozm_di.AddScoped[IFluffyCoreExternalOauth2FlowStoreServer](cb, ctor)
}

// AddExternalOauth2FlowStoreServer adds the fluffycore aware grpc server
func AddExternalOauth2FlowStoreServer(cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	AddExternalOauth2FlowStoreServerWithExternalRegistration(cb, ctor, func() endpoint.IEndpointRegistration {
		return &ExternalOauth2FlowStoreFluffyCoreServer{}
	})
}

// StoreExternalOauth2Final...
func (s *ExternalOauth2FlowStoreFluffyCoreServer) StoreExternalOauth2Final(ctx context.Context, request *StoreExternalOauth2FinalRequest) (*StoreExternalOauth2FinalResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreExternalOauth2FlowStoreServer](requestContainer)
	return downstreamService.StoreExternalOauth2Final(ctx, request)
}

// GetExternalOauth2Final...
func (s *ExternalOauth2FlowStoreFluffyCoreServer) GetExternalOauth2Final(ctx context.Context, request *GetExternalOauth2FinalRequest) (*GetExternalOauth2FinalResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreExternalOauth2FlowStoreServer](requestContainer)
	return downstreamService.GetExternalOauth2Final(ctx, request)
}

// DeleteExternalOauth2Final...
func (s *ExternalOauth2FlowStoreFluffyCoreServer) DeleteExternalOauth2Final(ctx context.Context, request *DeleteExternalOauth2FinalRequest) (*DeleteExternalOauth2FinalResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreExternalOauth2FlowStoreServer](requestContainer)
	return downstreamService.DeleteExternalOauth2Final(ctx, request)
}
