// Code generated by protoc-gen-go-fluffycore-di. DO NOT EDIT.
// Code generated grpcGateway

package client

import (
	context "context"
	fluffy_dozm_di "github.com/fluffy-bunny/fluffy-dozm-di"
	endpoint "github.com/fluffy-bunny/fluffycore/contracts/endpoint"
	dicontext "github.com/fluffy-bunny/fluffycore/middleware/dicontext"
	runtime "github.com/grpc-ecosystem/grpc-gateway/v2/runtime"
	grpc "google.golang.org/grpc"
)

// IFluffyCoreClientServiceServer defines the grpc server
type IFluffyCoreClientServiceServer interface {
	ClientServiceServer
}

type UnimplementedFluffyCoreClientServiceServerEndpointRegistration struct {
}

func (UnimplementedFluffyCoreClientServiceServerEndpointRegistration) RegisterFluffyCoreHandler(gwmux *runtime.ServeMux, conn *grpc.ClientConn) {
}

// ClientServiceFluffyCoreServer defines the grpc server truct
type ClientServiceFluffyCoreServer struct {
	UnimplementedClientServiceServer
	UnimplementedFluffyCoreClientServiceServerEndpointRegistration
}

// RegisterFluffyCoreGRPCService the server with grpc
func (srv *ClientServiceFluffyCoreServer) RegisterFluffyCoreGRPCService(s *grpc.Server) {
	RegisterClientServiceServer(s, srv)
}

// AddClientServiceServerWithExternalRegistration adds the fluffycore aware grpc server and external registration service.  Mainly used for grpc-gateway
func AddClientServiceServerWithExternalRegistration(cb fluffy_dozm_di.ContainerBuilder, ctor any, register func() endpoint.IEndpointRegistration) {
	fluffy_dozm_di.AddSingleton[endpoint.IEndpointRegistration](cb, register)
	fluffy_dozm_di.AddScoped[IFluffyCoreClientServiceServer](cb, ctor)
}

// AddClientServiceServer adds the fluffycore aware grpc server
func AddClientServiceServer(cb fluffy_dozm_di.ContainerBuilder, ctor any) {
	AddClientServiceServerWithExternalRegistration(cb, ctor, func() endpoint.IEndpointRegistration {
		return &ClientServiceFluffyCoreServer{}
	})
}

// CreateClient...
func (s *ClientServiceFluffyCoreServer) CreateClient(ctx context.Context, request *CreateClientRequest) (*CreateClientResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.CreateClient(ctx, request)
}

// GetClient...
func (s *ClientServiceFluffyCoreServer) GetClient(ctx context.Context, request *GetClientRequest) (*GetClientResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.GetClient(ctx, request)
}

// DeleteClient...
func (s *ClientServiceFluffyCoreServer) DeleteClient(ctx context.Context, request *DeleteClientRequest) (*DeleteClientResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.DeleteClient(ctx, request)
}

// UpdateClient...
func (s *ClientServiceFluffyCoreServer) UpdateClient(ctx context.Context, request *UpdateClientRequest) (*UpdateClientResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.UpdateClient(ctx, request)
}

// ListClient...
func (s *ClientServiceFluffyCoreServer) ListClient(ctx context.Context, request *ListClientRequest) (*ListClientResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.ListClient(ctx, request)
}

// AddNewClientSecret...
func (s *ClientServiceFluffyCoreServer) AddNewClientSecret(ctx context.Context, request *AddNewClientSecretRequest) (*AddNewClientSecretResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.AddNewClientSecret(ctx, request)
}

// ValidateClientSecret...
func (s *ClientServiceFluffyCoreServer) ValidateClientSecret(ctx context.Context, request *ValidateClientSecretRequest) (*ValidateClientSecretResponse, error) {
	requestContainer := dicontext.GetRequestContainer(ctx)
	downstreamService := fluffy_dozm_di.Get[IFluffyCoreClientServiceServer](requestContainer)
	return downstreamService.ValidateClientSecret(ctx, request)
}
