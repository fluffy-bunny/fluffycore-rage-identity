version: "3.8"

services:
  reverse-proxy:
    extends:
      file: ./docker-compose-common-proxy.yml
      service: micro
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      # Web
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Map the static configuration into the container
      - ./config/static.yml:/etc/traefik/traefik.yml:ro
      # Map the dynamic configuration into the container
      - ./config/dynamic.yml:/etc/traefik/dynamic.yml:ro
      # Map the certificats into the container
      - ./certs:/etc/certs:ro
  rage:
    container_name: rage
    extends:
      file: ./docker-compose-common-rage.yml
      service: micro
    image: fluffycore.rage.oidc:latest
    dns:
      - 8.8.8.8
    ports:
      - "50051:50051"
      - "50052:50052"
      - "50053:50053"
      - "9044:9044"
    env_file:
      - .env
      - .env.secrets
    environment:
      APPLICATION_ENVIRONMENT: "DOCKER"
      ENABLE_GRPC_SERVER_REFLECTION: "true"
      GRPC_GATEWAY_ENABLED: "true"
      RAGE_GRPC_GATEWAY_ENABLED: "true"
      RAGE_APPLICATION_NAME: "RAGE"
      RAGE_APPLICATION_ENVIRONMENT: "DOCKER"
      RAGE_LOG_LEVEL": "debug"
      RAGE_PRETTY_LOG: "true"
      RAGE_PORT: "50051"
      RAGE_REST_PORT: "50052"
      RAGE_oauth2Port: "50053"
      RAGE_customString: "In Flames"
      RAGE_someSecret: "1234567890"
      RAGE_jwtValidators__issuers: "http://starterkit:50053"
      RAGE_jwtValidators__jwksUrls: "http://starterkit:50053/.well-known/jwks"
      RAGE_configFiles__mockOAuth2ClientPath: "/config/mockOAuth2Clients.json"
      RAGE_configFiles__oidcClientPath: "/config/oidcClients.json"
      RAGE_configFiles__idpsPath: "/config/idps.json"
      RAGE_configFiles__signingKeyJsonPath: "/config/signing-keys.json"
      RAGE_emailConfig__host: "${RAGE_SMTP_HOST}:25"
      RAGE_emailConfig__auth__plainAuth__host: "${RAGE_SMTP_HOST}"
      RAGE_emailConfig__auth__plainAuth__username: "${SMTP4DEV_SMTP_CONFIG__USER}"
      RAGE_emailConfig__auth__plainAuth__password: "${SMTP4DEV_SMTP_CONFIG__PASSWORD}"
      RAGE_emailConfig__auth__plainAuth__identity: "${RAGE_SMTP_HOST}"
      RAGE_selfIDPConfig__redirectUrl: "https://rage.localhost.dev/auth/callback"
      RAGE_selfIDPConfig__authority: "https://rage.localhost.dev"
      RAGE_oidcConfig__baseUrl: "https://rage.localhost.dev"
      RAGE_emailConfig__justLogIt: "true"
      RAGE_echo__disableSecureCookies: "true"
      RAGE_systemConfig__domain: "rage.localhost.dev"
      RAGE_systemConfig__developerMode: "true"
    labels:
      # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # Define the network that should be used
      - "traefik.docker.network=proxy"
      # URL to reach this container
      - "traefik.http.routers.rage.rule=Host(`rage.localhost.dev`)"
      # Activation of TLS
      - "traefik.http.routers.rage.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
      - "traefik.http.services.rage.loadbalancer.server.port=9044"
    volumes:
      - ./cmd/server/config/mockOAuth2Clients.json:/config/mockOAuth2Clients.json
      - ./cmd/server/config/oidcClients.json:/config/oidcClients.json
      - ./cmd/server/config/idps.docker.json:/config/idps.json
      - ./cmd/server/config/signing-keys.json:/config/signing-keys.json

    entrypoint: ["/app/server", "serve"]

  whoami:
    extends:
      file: ./docker-compose-common-rage.yml
      service: micro
    image: containous/whoami
    container_name: whoami
    security_opt:
      - no-new-privileges:true
    labels:
      # Enable this container to be mapped by traefik
      # For more information, see: https://docs.traefik.io/providers/docker/#exposedbydefault
      - "traefik.enable=true"
      # Define the network that should be used
      - "traefik.docker.network=proxy"
      # URL to reach this container
      - "traefik.http.routers.whoami.rule=Host(`whoami.localhost.dev`)"
      # Activation of TLS
      - "traefik.http.routers.whoami.tls=true"
      # If port is different than 80, use the following service:
      # - "traefik.http.services.<service_name>.loadbalancer.server.port=<port>"
  smtp4dev:
    extends:
      file: ./docker-compose-common-rage.yml
      service: micro
    image: rnwood/smtp4dev:v3
    restart: always
    ports:
      # Change the number before : to the port the web interface should be accessible on
      - "${SMTP4DEV_WEB_PORT}:80"
      # Change the number before : to the port the SMTP server should be accessible on
      - "25:25"
      # Change the number before : to the port the IMAP server should be accessible on
      - "143:143"
    volumes:
      # This is where smtp4dev stores the database..
      - smtp4dev-data:/smtp4dev
    environment:
      # Uncomment to customise these settings

      #Specifies the virtual path from web server root where SMTP4DEV web interface will be hosted. e.g. "/" or "/smtp4dev"
      #- ServerOptions__BasePath=/smtp4dev

      #Specifies the server hostname. Used in auto-generated TLS certificate if enabled.
      - ServerOptions__HostName=smtp4dev

      #Locks settings from being changed by user via web interface
      #- ServerOptions__LockSettings=true

      #Specifies the path where the database will be stored relative to APPDATA env var on Windows or XDG_CONFIG_HOME on non-Windows. Specify "" to use an in memory database.
      #- ServerOptions__Database=database.db

      #Specifies the number of messages to keep
      #- ServerOptions__NumberOfMessagesToKeep=100

      #Specifies the number of sessions to keep
      #- ServerOptions__NumberOfSessionsToKeep=100

      #Specifies the TLS mode to use. None=Off. StartTls=On demand if client supports STARTTLS. ImplicitTls=TLS as soon as connection is established.
      - ServerOptions__TlsMode=STARTTLS

      #Specifies the TLS certificate to use if TLS is enabled/requested. Specify "" to use an auto-generated self-signed certificate (then see console output on first startup)
      #- ServerOptions__TlsCertificate=

      #Sets the name of the SMTP server that will be used to relay messages or "" if messages should not be relayed
      #- RelayOptions__SmtpServer=

      #Sets the port number for the SMTP server used to relay messages.
      #- RelayOptions__SmtpPort=25

      #Specifies a comma separated list of recipient addresses for which messages will be relayed. An empty list means that no messages are relayed.
      #- RelayOptions__AllowedEmailsString=

      #Specifies the address used in MAIL FROM when relaying messages. (Sender address in message headers is left unmodified). The sender of each message is used if not specified.
      #- RelayOptions__SenderAddress=

      #The username for the SMTP server used to relay messages. If "" no authentication is attempted.
      #- RelayOptions__Login=

      #The password for the SMTP server used to relay messages
      #- RelayOptions__Password=

      #Specifies the port the IMAP server will listen on - allows standard email clients to view/retrieve messages
      #"ServerOptions__ImapPort"=143

#====================================================
# NETWORKS
#====================================================
networks:
  proxy:
  rage:

#====================================================
# VOLUMES
#====================================================
volumes:
  smtp4dev-data:
